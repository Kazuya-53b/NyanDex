<%= form_with(model: @cat, local: true, html: { multipart: true }) do |form| %>
  <%= form.label :name %>
  <%= form.text_field :name %>

  <%= form.label :gender %>
  <%= form.text_field :gender %>

  <%= form.label :age %>
  <%= form.number_field :age %>

  <%= form.label :breed %>
  <%= form.text_field :breed %>

  <%= form.label :color %>
  <%= form.text_field :color %>

  <%= form.label :pattern %>
  <%= form.text_field :pattern %>

  <%= form.label :short_description %>
  <%= form.text_area :short_description %>

  <%= form.label :long_description %>
  <%= form.text_area :long_description %>

  <%= form.label :images %>
  <%= form.file_field :images, accept: 'image/*', multiple: true, id: 'cat_images' %>

  <div id="image-preview-container" style="display: none;">
    <img id="image-preview" src="" alt="Image Preview" style="max-width: 100%;" />
  </div>

  <button type="button" id="crop-button" style="display: none;">Crop Image</button>
  
  <div id="preview-list" style="display: none;">
    <h3>トリミング済み画像プレビュー:</h3>
    <div id="cropped-images"></div>
  </div>

  <%= form.submit '猫を登録', id: 'submit-button' %>
<% end %>

<script>
  let cropper; 
  let currentIndex = 0;
  const croppedImages = [];
  let originalFile;

  document.getElementById('cat_images').addEventListener('change', function(event) {
    const files = event.target.files;
    if (files.length > 0) {
      currentIndex = 0; 
      originalFile = files[currentIndex]; 
      loadImage(originalFile); 
    }
  });

  function loadImage(file) {
    const reader = new FileReader();
    reader.onload = function(e) {
        const img = document.getElementById('image-preview');
        img.src = e.target.result;

        if (cropper) {
            cropper.destroy();
        }

        cropper = new Cropper(img, {
            aspectRatio: 1, // アスペクト比を1:1に設定
            viewMode: 1,
            autoCropArea: 1,
            responsive: true,
            ready: function () {
                // 画像の読み込み後にトリミング範囲を設定
                const imageData = cropper.getImageData();
                const cropBoxData = {
                    left: (imageData.naturalWidth - imageData.naturalHeight) / 2,
                    top: 0,
                    width: imageData.naturalHeight,
                    height: imageData.naturalHeight,
                };
                cropper.setCropBoxData(cropBoxData);
            },
        });

        document.getElementById('image-preview-container').style.display = 'block'; // プレビューコンテナを表示
        document.getElementById('crop-button').style.display = 'block'; // トリミングボタンを表示
    };
    reader.readAsDataURL(file); 
  }

  document.getElementById('crop-button').addEventListener('click', function() {
    if (cropper && originalFile) { 
        cropper.getCroppedCanvas({ 
            width: 300, // 任意の幅を設定（正方形）
            height: 300 // 任意の高さを設定（正方形）
        }).toBlob((blob) => {
            if (!blob) {
                console.error('トリミングに失敗しました。blobがnullです。');
                return;
            }
            const fileName = `${Date.now()}_${originalFile.name}`;
            const file = new File([blob], fileName, { type: "image/jpeg" });
            croppedImages[currentIndex] = file;

            const previewContainer = document.getElementById('cropped-images');
            const imgElement = document.createElement('img');
            imgElement.src = URL.createObjectURL(file);
            imgElement.style.maxWidth = '100px';
            imgElement.style.marginRight = '10px';
            previewContainer.appendChild(imgElement);

            document.getElementById('image-preview-container').style.display = 'none'; // プレビューコンテナを非表示
            document.getElementById('crop-button').style.display = 'none'; // トリミングボタンを非表示

            // 次の画像があればロード
            if (currentIndex < document.getElementById('cat_images').files.length - 1) {
                currentIndex++;
                const files = document.getElementById('cat_images').files;
                originalFile = files[currentIndex]; 
                loadImage(originalFile); 
            } else {
                document.getElementById('preview-list').style.display = 'block'; // すべての画像がトリミングされたらプレビューリストを表示
                alert('すべての画像がトリミングされました！');
            }
        });
    }
  });

  document.querySelector('form').addEventListener('submit', function(event) {
    const dataTransfer = new DataTransfer();
    
    // トリミングされた画像のみを追加
    croppedImages.forEach((imgFile) => {
      if (imgFile) {
        dataTransfer.items.add(imgFile);
      }
    });

    // 送信前にトリミングされた画像の数を確認
    console.log('Cropped Images Count:', dataTransfer.files.length);

    // cat_imagesフィールドにトリミングした画像をセット
    document.getElementById('cat_images').files = dataTransfer.files; 
  });
</script>
